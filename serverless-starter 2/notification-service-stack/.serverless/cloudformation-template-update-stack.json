{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "SqsEmailListenerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/calo-notification-service-stack-dev-sqsEmailListener",
        "RetentionInDays": 90
      }
    },
    "SqsSlackListenerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/calo-notification-service-stack-dev-sqsSlackListener",
        "RetentionInDays": 90
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "calo-notification-service-stack",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calo-notification-service-stack-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calo-notification-service-stack-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MyEmailSQS",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "MySlackSQS",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "calo-notification-service-stack",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SqsEmailListenerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/calo-notification-service-stack/dev/1691501293348-2023-08-08T13:28:13.348Z/sqsEmailListener.zip"
        },
        "Handler": "src/notifications/sendEmail/handler.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "calo-notification-service-stack-dev-sqsEmailListener",
        "MemorySize": 1024,
        "Timeout": 29,
        "Architectures": [
          "x86_64"
        ],
        "Tags": [
          {
            "Key": "service-name",
            "Value": "calo-notification-service-stack"
          }
        ],
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "IS_PROD": {
              "Fn::If": [
                "IS_PROD",
                "true",
                "false"
              ]
            },
            "IS_DEV": {
              "Fn::If": [
                "IS_DEV",
                "true",
                "false"
              ]
            },
            "POWERTOOLS_SERVICE_NAME": "calo-notification-service-stack",
            "LOG_LEVEL": {
              "Fn::If": [
                "IS_PROD",
                "ERROR",
                "INFO"
              ]
            },
            "POWERTOOLS_LOGGER_LOG_EVENT": {
              "Fn::If": [
                "IS_PROD",
                "false",
                "true"
              ]
            },
            "POWERTOOLS_LOGGER_SAMPLE_RATE": {
              "Fn::If": [
                "IS_PROD",
                "0.25",
                "1"
              ]
            },
            "POWERTOOLS_TRACE_ENABLED": "true",
            "POWERTOOLS_TRACER_CAPTURE_HTTPS_REQUESTS": "true",
            "POWERTOOLS_TRACER_CAPTURE_RESPONSE": "true",
            "POWERTOOLS_TRACER_CAPTURE_ERROR": "true",
            "POWERTOOLS_METRICS_NAMESPACE": "Calo",
            "SQS_QUEUE_URL": {
              "Ref": "MyEmailSQS"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SqsEmailListenerIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SqsEmailListenerIamRoleLambdaExecution",
        "SqsEmailListenerLogGroup"
      ]
    },
    "SqsSlackListenerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/calo-notification-service-stack/dev/1691501293348-2023-08-08T13:28:13.348Z/sqsSlackListener.zip"
        },
        "Handler": "src/notifications/sendSlack/handler.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "calo-notification-service-stack-dev-sqsSlackListener",
        "MemorySize": 1024,
        "Timeout": 29,
        "Architectures": [
          "x86_64"
        ],
        "Tags": [
          {
            "Key": "service-name",
            "Value": "calo-notification-service-stack"
          }
        ],
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "IS_PROD": {
              "Fn::If": [
                "IS_PROD",
                "true",
                "false"
              ]
            },
            "IS_DEV": {
              "Fn::If": [
                "IS_DEV",
                "true",
                "false"
              ]
            },
            "POWERTOOLS_SERVICE_NAME": "calo-notification-service-stack",
            "LOG_LEVEL": {
              "Fn::If": [
                "IS_PROD",
                "ERROR",
                "INFO"
              ]
            },
            "POWERTOOLS_LOGGER_LOG_EVENT": {
              "Fn::If": [
                "IS_PROD",
                "false",
                "true"
              ]
            },
            "POWERTOOLS_LOGGER_SAMPLE_RATE": {
              "Fn::If": [
                "IS_PROD",
                "0.25",
                "1"
              ]
            },
            "POWERTOOLS_TRACE_ENABLED": "true",
            "POWERTOOLS_TRACER_CAPTURE_HTTPS_REQUESTS": "true",
            "POWERTOOLS_TRACER_CAPTURE_RESPONSE": "true",
            "POWERTOOLS_TRACER_CAPTURE_ERROR": "true",
            "POWERTOOLS_METRICS_NAMESPACE": "Calo",
            "SQS_QUEUE_URL": {
              "Ref": "MySlackSQS"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SqsSlackListenerIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SqsSlackListenerIamRoleLambdaExecution",
        "SqsSlackListenerLogGroup"
      ]
    },
    "SqsEmailListenerEventSourceMappingSQSMyEmailSQS": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "SqsEmailListenerIamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MyEmailSQS",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "SqsEmailListenerLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "SqsSlackListenerEventSourceMappingSQSMySlackSQS": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "SqsSlackListenerIamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MySlackSQS",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "SqsSlackListenerLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "SqsEmailListenerIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "calo-notification-service-stack",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calo-notification-service-stack-dev-sqsEmailListener:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MyEmailSQS",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sns:Subscribe"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MyEmailSQS",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "calo-notification-service-stack",
              "dev",
              "sqsEmailListener",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "SqsSlackListenerIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "calo-notification-service-stack",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calo-notification-service-stack-dev-sqsSlackListener:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MySlackSQS",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sns:Subscribe"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MySlackSQS",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "calo-notification-service-stack",
              "dev",
              "sqsSlackListener",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "MyEmailSQS": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "MyEmailSQS"
      }
    },
    "MySlackSQS": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "MySlackSQS"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-calo-notification-service-stack-dev-ServerlessDeploymentBucketName"
      }
    },
    "MyEmailSQSArn": {
      "Value": {
        "Ref": "MyEmailSQS"
      },
      "Export": {
        "Name": "my-email-sqs-url"
      }
    },
    "MySlackSQSArn": {
      "Value": {
        "Ref": "MySlackSQS"
      },
      "Export": {
        "Name": "my-slack-sqs-url"
      }
    }
  },
  "Conditions": {
    "IS_PROD": {
      "Fn::Equals": [
        "dev",
        "prod"
      ]
    },
    "IS_DEV": {
      "Fn::Equals": [
        "dev",
        "dev"
      ]
    }
  }
}